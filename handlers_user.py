import asyncio

from aiogram import types, F, Router
from aiogram.filters import ChatMemberUpdatedFilter, KICKED, MEMBER
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ChatMemberUpdated, InlineKeyboardMarkup, \
    InlineKeyboardButton
from sqlalchemy import select

from bot import bot
from config import ADMIN_IDS
from db.models import SubscriptionRequest, Session, Chanel

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
router = Router()


@router.chat_join_request()
async def handle_join_request(join_request: types.ChatJoinRequest) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è:
    1. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –∫–∞–Ω–∞–ª–µ
    2. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        join_request (types.ChatJoinRequest): –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞–Ω–∞–ª–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    user = join_request.from_user
    chat = join_request.chat

    async with Session() as db:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
        request = SubscriptionRequest(
            user_id=user.id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name,
            channel_id=chat.id,
            channel_name=chat.title
        )
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        db.add(request)
        await db.commit()

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üë§ –Ø —á–µ–ª–æ–≤–µ–∫!")]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await bot.send_message(
        chat_id=user.id,
        text="üëã –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª! –î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã —á–µ–ª–æ–≤–µ–∫, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ! ‚úÖ",
        reply_markup=keyboard
    )


@router.message(F.text == "üë§ –Ø —á–µ–ª–æ–≤–µ–∫!")
async def handle_step_1(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–Ø —á–µ–ª–æ–≤–µ–∫!'"""

    async with Session() as db:
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        result = await db.execute(
            select(Chanel))
        chanel = result.scalar_one_or_none()
        if not chanel:
            request = Chanel()
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            db.add(request)
            await db.commit()
        result = await db.execute(
            select(Chanel))
        chanel = result.scalar_one_or_none()
        try:
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
            subscribe_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=chanel.link)]
            ])

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
            await bot.send_message(
                chat_id=message.from_user.id,
                text="üì¢ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!",
                reply_markup=subscribe_keyboard
            )

        except Exception as e:
            print(e)
            for admin_id in ADMIN_IDS:
                try:
                    await bot.send_message(
                        admin_id,
                        f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ø —á–µ–ª–æ–≤–µ–∫ - {e}"
                    )
                except Exception as e:
                    pass

        # –ñ–¥–µ–º 60 —Å–µ–∫—É–Ω–¥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é
        await asyncio.sleep(90)
        await bot.send_message(
            chat_id=message.from_user.id,
            text="üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É! –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –µ—ë –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è! ‚è∞"
        )


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=KICKED))
async def user_blocked_bot(event: ChatMemberUpdated) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    –ü–æ–º–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        event (ChatMemberUpdated): –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —á–∞—Ç–∞

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None
    """
    async with Session() as db:
        # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        result = await db.execute(
            select(SubscriptionRequest).filter(
                SubscriptionRequest.user_id == event.from_user.id,
            )
        )
        requests = result.scalars().all()

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
        for request in requests:
            request.user_is_block = True
        await db.commit()


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=MEMBER))
async def user_unblocked_bot(event: ChatMemberUpdated) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    –ü–æ–º–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        event (ChatMemberUpdated): –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —á–∞—Ç–∞

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None
    """
    async with Session() as db:
        # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        result = await db.execute(
            select(SubscriptionRequest).filter(
                SubscriptionRequest.user_id == event.from_user.id,
            )
        )
        requests = result.scalars().all()

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
        for request in requests:
            request.user_is_block = False
        await db.commit()